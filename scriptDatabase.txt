CREATE DATABASE myfinance
  WITH ENCODING='UTF8'
       OWNER=postgres
       LC_COLLATE='Portuguese_Brazil.1252'
       LC_CTYPE='Portuguese_Brazil.1252'
       CONNECTION LIMIT=-1;
       
 
 CREATE SEQUENCE public.bank_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
 
 CREATE TABLE public.bank
(
  id bigint NOT NULL DEFAULT nextval('bank_sequence'::regclass),
  code character varying,
  name character varying,
  CONSTRAINT bank_pkey PRIMARY KEY (id)
)



 CREATE SEQUENCE public.agence_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;

CREATE TABLE public.bank_agence
(
  id bigint NOT NULL DEFAULT nextval('agence_sequence'::regclass),
  agence character varying,
  dv character varying,
  id_bank bigint,
  CONSTRAINT bank_agence_pkey PRIMARY KEY (id),
  CONSTRAINT fk_bank FOREIGN KEY (id_bank)
      REFERENCES public.bank (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)


CREATE SEQUENCE public.company_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE public.company_sequence
  OWNER TO postgres;
 
  
 CREATE TABLE public.company
(
  id bigint NOT NULL DEFAULT nextval('company_sequence'::regclass),
  name character varying,
  CONSTRAINT company_pkey PRIMARY KEY (id)
)


CREATE SEQUENCE public.accountplan_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
 create table account_plan(
  id bigint not null default nextval('accountplan_sequence'::regclass),
  credit boolean,
  name character varying,
  constraint account_pkey primary key (id)
);


CREATE SEQUENCE public.clifor_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
 create table clifor(
  id bigint not null default nextval('clifor_sequence'::regclass),
  provider boolean,
  name character varying,
  constraint clifor_pkey primary key (id)
);



CREATE SEQUENCE public.bankaccount_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
create table bank_account(
  id bigint not null default nextval('bankaccount_sequence'::regclass),
  code character varying,
  account character varying,
  id_bank_agence bigint,
  id_company bigint,
  constraint account_pk primary key(id),
  constraint account_fk_agence foreign key (id_bank_agence) references bank_agence(id),
  constraint account_fk_company foreign key (id_company) references company(id)
)


CREATE SEQUENCE public.billpay_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
 CREATE TABLE billpay(
  id bigint not null default nextval('billpay_sequence'::regclass),
  invoice character varying,
  historic character varying,
  date date,
  due_date date,
  value decimal(10,2),
  portion integer,
  fulfillment integer,
  status character varying,
  id_clifor bigint,
  id_company bigint,
  id_account_plan bigint,
  constraint bill_pk1 primary key(id),
  constraint bill_fk2 foreign key(id_clifor) references clifor(id),
  constraint bill_fk3 foreign key(id_company) references company(id),
  constraint bill_fk4 foreign key(id_account_plan) references account_plan(id)
);


CREATE SEQUENCE public.payment_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
CREATE TABLE payment (
	id bigint not null default nextval('payment_sequence'::regclass),
	id_billpay bigint not null,
	id_bank_account bigint not null,
	date date not null,
	constraint pk_payment primary key (id),
	constraint fk_billpay foreign key (id_billpay) references billpay(id),
	constraint fk_account foreign key (id_bank_account) references bank_account(id)
);


CREATE SEQUENCE public.receivable_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
 CREATE TABLE receivable(
  id bigint not null default nextval('receivable_sequence'::regclass),
  invoice character varying,
  historic character varying,
  date date,
  due_date date,
  value decimal(10,2),
  portion integer,
  fulfillment integer,
  status character varying,
  id_clifor bigint,
  id_company bigint,
  id_account_plan bigint,
  constraint rec_pk1 primary key(id),
  constraint rec_fk2 foreign key(id_clifor) references clifor(id),
  constraint rec_fk3 foreign key(id_company) references company(id),
  constraint rec_fk4 foreign key(id_account_plan) references account_plan(id)
);


CREATE SEQUENCE public.receivement_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
CREATE TABLE receivement (
	id bigint not null default nextval('receivement_sequence'::regclass),
	id_receivable bigint not null,
	id_bank_account bigint not null,
	date date not null,
	constraint pk_receivement primary key (id),
	constraint fk_receivable foreign key (id_receivable) references receivable(id),
	constraint fk_account foreign key (id_bank_account) references bank_account(id)
);


CREATE SEQUENCE public.bankstatement_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;


CREATE TABLE bank_statement (
	id bigint not null default nextval('bankstatement_sequence'::regclass),
	date date not null,
	credit boolean,
	value decimal(10,2) not null,
	historic character varying not null,
	id_bank_account bigint,
	id_payment bigint,
	id_receivement bigint,
	constraint pk_statement primary key (id),
	constraint fk_bank_statement foreign key (id_bank_account) references bank_account(id),
	constraint fk_payment_statement foreign key (id_payment) references payment(id),
	constraint fk_receivement_statement foreign key(id_receivement) references receivement(id)
);


ALTER TABLE bank_account ADD COLUMN balance DECIMAL(10,2);


CREATE SEQUENCE public.moviment_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
 
 
 CREATE TABLE moviment (
	id bigint not null default nextval('moviment_sequence'::regclass),
	date_beginner date not null,
	date_finish date not null,	
	closed boolean,
	value_beginner decimal(10,2) not null,
	value_finish decimal(10,2),
	balance_moviment decimal(10,2),
	name character varying not null,
	constraint pk_moviment primary key (id)
);

ALTER TABLE bank_statement ADD COLUMN initial_value BOOLEAN;


CREATE SEQUENCE public.transferencia_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
 CREATE TABLE transferencia (
	id bigint not null default nextval('transferencia_sequence'::regclass),
	date date not null,
	closed boolean,
	value decimal(10,2) not null,
	observation character varying(255),
	id_account_origin bigint,
	id_account_destination bigint,
	constraint pk_moviment primary key (id),
	constraint fk_origim foreign key (id_account_origin) references bank_account(id),
	constraint fk_detination foreign key (id_account_destination) references bank_account(id)
); 

alter table bank_statement add column id_transferencia integer;
alter table bank_statement add constraint fk_transf foreign key (id_transferencia) references transferencia(id);

  